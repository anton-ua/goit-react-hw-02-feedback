{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/App.js","index.js","components/App.module.css"],"names":["FeedbackOptions","options","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","onLeaveFeedback","Section","title","children","Counter","state","hadleIncrement","e","currentFeedback","currentTarget","textContent","toLowerCase","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","className","styles","container","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"2NAqBeA,EAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACtB,kBAAC,WAAD,KACE,4BAAQC,KAAK,SAASC,QAASF,GAA/B,QAGA,4BAAQC,KAAK,SAASC,QAASF,GAA/B,WAGA,4BAAQC,KAAK,SAASC,QAASF,GAA/B,SCqBWG,EA7BI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,mBALiB,SAMjBC,gBAGE,kBAAC,WAAD,KACE,oCAAUL,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,MAGF,iDCLWE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,I,gBCAgBC,E,4MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,EACpBC,iBAAiB,G,EAGnBM,eAAiB,SAAAC,GACf,IAAMC,EAAkBD,EAAEE,cAAcC,YAAYC,cAE/C,EAAKX,iBACR,EAAKY,SAAS,CAAEZ,iBAAiB,IAGnC,EAAKY,UAAS,SAAAP,GAAK,sBAChBG,EAAkBH,EAAMG,GAAmB,MAG9C,EAAKK,qBACL,EAAKC,mC,EAGPD,mBAAqB,WACnB,EAAKD,UAAS,kBAA6B,CACzCd,MADY,EAAGH,KAAH,EAASC,QAAT,EAAkBC,S,EAKlCiB,gCAAkC,WAChC,EAAKF,UAAS,gBAAGjB,EAAH,EAAGA,KAAMG,EAAT,EAASA,MAAT,MAAsB,CAClCC,mBAAoBgB,KAAKC,MAAc,IAAPrB,EAAcG,Q,uDAIxC,IAAD,EAQHmB,KAAKZ,MANPV,EAFK,EAELA,KACAC,EAHK,EAGLA,QACAC,EAJK,EAILA,IACAC,EALK,EAKLA,MACAC,EANK,EAMLA,mBACAC,EAPK,EAOLA,gBAEF,OACE,yBAAKkB,UAAWC,IAAOC,WACrB,kBAAC,EAAD,CAASlB,MAAM,yBACb,kBAAC,EAAD,CACEX,QAAS0B,KAAKX,eACdN,gBAAiBA,KAGrB,kBAAC,EAAD,CAASE,MAAM,cACb,kBAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,EACpBC,gBAAiBA,U,GA7DQqB,aCFrCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.24c778e3.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options }) => (\r\n  <Fragment>\r\n    <button type=\"button\" onClick={options}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" onClick={options}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={options}>\r\n      Bad\r\n    </button>\r\n  </Fragment>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n  onLeaveFeedback\r\n}) =>\r\n  onLeaveFeedback ? (\r\n    <Fragment>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </Fragment>\r\n  ) : (\r\n    <p>No feedback given</p>\r\n  );\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  onLeaveFeedback: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Section from \"./Section/Section\";\r\nimport styles from \"./App.module.css\";\r\n\r\nexport default class Counter extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n    onLeaveFeedback: false\r\n  };\r\n\r\n  hadleIncrement = e => {\r\n    const currentFeedback = e.currentTarget.textContent.toLowerCase();\r\n\r\n    if (!this.onLeaveFeedback) {\r\n      this.setState({ onLeaveFeedback: true });\r\n    }\r\n\r\n    this.setState(state => ({\r\n      [currentFeedback]: state[currentFeedback] + 1\r\n    }));\r\n\r\n    this.countTotalFeedback();\r\n    this.countPositiveFeedbackPercentage();\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    this.setState(({ good, neutral, bad }) => ({\r\n      total: good + neutral + bad\r\n    }));\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(({ good, total }) => ({\r\n      positivePercentage: Math.round((good * 100) / total)\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      good,\r\n      neutral,\r\n      bad,\r\n      total,\r\n      positivePercentage,\r\n      onLeaveFeedback\r\n    } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.hadleIncrement}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          ></Statistics>\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2RpIQ\"};"],"sourceRoot":""}